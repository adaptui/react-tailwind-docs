{"/docs/components/feedback/meter":{"title":"meter","data":{"":"Meter is used to display finite value that are within a known range eg., CPU\nusage.\n\n","imports#Imports":"\nimport {\n  Meter,\n  MeterBar,\n  MeterBarWrapper,\n  MeterHint,\n  MeterLabel,\n  useMeterProps,\n  useMeterState,\n  MeterTrack,\n  MeterWrapper,\n} from \"@renderlesskit/react-tailwind\";\n","usage#Usage":"\n\n","min-max-values#Min max values":"\n\n","meter-sizes#Meter sizes":"Meter comes with 4 sizes sm md lg & xl\n\n","meter-label#Meter Label":"Meter also comes with A11y label that can also be used to describe the meter.\n\n","meter-hint#Meter Hint":"Meter comes with A11y hint that can be used with label to indicate the meter\nstatus.\n\n","meter-interval#Meter Interval":"Meter has an interval that can be used to indicate multiple range of the meter.\n\n","customizing-meter#Customizing Meter":"To customize the appearance of the Meter component we can simply pass down\nchildren components (MeterTrack, MeterBar) for more control.\n\n","api-reference#API Reference":"\n\n"}},"/docs/components/feedback/progress":{"title":"progress","data":{"":"Progress is used to display the progress status for a task that takes a long\ntime or consists of several steps.\n\n","imports#Imports":"\nimport {\n  Progress,\n  ProgressBar,\n  ProgressHint,\n  ProgressLabel,\n  useProgressProps,\n  useProgressState,\n  ProgressTrack,\n  ProgressWrapper,\n} from \"@renderlesskit/react-tailwind\";\n","usage#Usage":"\n\n","min-max-values#Min max values":"\n\n","indeterminate-progress#Indeterminate progress":"By setting the value prop to null, progress' state becomes indeterminate\n\n","progress-sizes#Progress sizes":"Progress comes with 4 sizes sm md lg & xl\n\n","progress-label#Progress Label":"Progress also comes with A11y label that can also be used to describe the\nprogress status\n\n","progress-hint#Progress Hint":"Progress comes with A11y hint that can be used with label to indicate the\nprogress status.\n\n","customizing-progress#Customizing Progress":"To customize the appearance of the Progress component we can simply pass down\nchildren components (ProgressTrack, ProgressBar) for more control.\n\n","api-reference#API Reference":"\n\n"}},"/docs/components/feedback/circular-progress":{"title":"circular-progress","data":{"":"The CircularProgress component is used to indicate the progress for determinate\nand indeterminate processes.\n\n","imports#Imports":"\nimport {\n  CircularProgress,\n  CircularProgressBar,\n  CircularProgressBarWrapper,\n  CircularProgressHint,\n  useCircularProgressProps,\n  useCircularProgressState,\n  CircularProgressTrack,\n  CircularProgressTrackWrapper,\n} from \"@renderlesskit/react-tailwind\";\n","usage#Usage":"\n\n","min-max-values#Min max values":"\n\n","indeterminate-progress#Indeterminate progress":"By setting the value prop to null, progress' state becomes indeterminate\n\n","circularprogress-sizes#CircularProgress sizes":"CircularProgress comes with 3 sizes sm md lg & xl\n\n","circularprogress-hint#CircularProgress Hint":"CircularProgress comes with A11y hint that can be used with label to indicate\nthe progress status.\n\n","customizing-circularprogress#Customizing CircularProgress":"To customize the appearance of the CircularProgress component we can simply pass\ndown children components (CircularProgressTrack, CircularProgressBar,\nCircularProgressHint) for more control.\n\n","api-reference#API Reference":"\n\n"}}}